// Responsive Breakpoints


@mixin breakpoint($point) {
	@if $point == large {
		@media (max-width: 1600px) { @content; }
	}
	@else if $point == medium {
		@media (max-width: 1440px) { @content; }
	}
	@else if $point == laptop {
		@media (max-width: 1280px) { @content ; }
	}
	@else if $point == tablet {
		@media (max-width: 1024px) { @content; }
	}
	@else if $point == tablet-portrait {
		@media (max-width : 1024px)
		and (orientation : portrait){ @content; }
	}
	@else if $point == tablet-landscape {
		@media (max-width : 1024px)
		and (orientation : landscape) { @content; }
	}
	@else if $point == mobile {
		@media (max-width: 767px) { @content ; }
	}
	@else if $point == mobilevert {
		@media (max-width: 480px) { @content ; }
	}
	@else if $point == mobile-landscape {
		@media (max-width: 767px)
		and (orientation : landscape) { @content ; }
	}
	@else if $point == mobile-portrait {
		@media (max-width: 767px)
		and (orientation : portrait) { @content ; }
	}
	@else if $point == short {
		@media (max-height : 1000px)
		and  (min-width : 1024px) { @content ; }
	}
	@else if $point == compact {
		@media (max-height : 800px)
		and  (min-width : 1024px) { @content ; }
	}
}

//Opacity

@mixin opacity($opacity) {
	opacity: $opacity!important;
	$opacity-ie: $opacity * 100!important;
	filter: alpha(opacity=$opacity-ie)!important; //IE8
}

//Border Radius

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	border-radius: $radius;
	background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

//Background Size

@mixin background-size($size) {
	-webkit-background-size: $size!important;
	-moz-background-size: $size!important;
  	-o-background-size: $size!important;
  	background-size: $size!important;
}

// Filters

// grayscale      ex: filter: grayscale(100%);
// sepia          ex: filter: sepia(100%);
// saturate       ex: filter: saturate(0%);
// hue-rotate     ex: filter: hue-rotate(45deg);
// invert         ex: filter: invert(100%);
// brightness     ex: filter: brightness(15%);
// contrast       ex: filter: contrast(200%);
// blur           ex: filter: blur(2px);

@mixin filter($filter-type,$filter-amount) {
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}

// Rotate

 @mixin rotate($degrees) {
    -webkit-transform: rotate($degrees);
    -moz-transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    -o-transform: rotate($degrees);
    transform: rotate($degrees);
}

// Box Shadow
@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
	-webkit-box-shadow:$top $left $blur $color #{$inset};
	-moz-box-shadow:$top $left $blur $color #{$inset};
      box-shadow:$top $left $blur $color #{$inset};
    }

// Extends

%clearfix {
	*zoom: 1;
	&:before, &:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

%visuallyhidden {
	margin: -1px;
	padding: 0;
	width: 1px;
	height: 1px;
	overflow: hidden;
	clip: rect(0 0 0 0);
	clip: rect(0, 0, 0, 0);
	position: absolute;
}

// Mixin
@mixin keyframes($name) {
  @-moz-keyframes #{$name}    { @content; }
  @-webkit-keyframes #{$name} { @content; }
  @-o-keyframes #{$name}      { @content; }
  @-ms-keyframes #{$name}     { @content; }
  @-khtml-keyframes #{$name}  { @content; }
  @keyframes #{$name}         { @content; }
}
